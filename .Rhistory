#scale_fill_grey(na.value = rgb(0,0,0,alpha=0))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))+
scale_fill_gradientn(10)
?scale_fill_gradientn
ggplot(readin.m)+
geom_tile(aes(x=X, y = variable, fill = (value)))+
#scale_fill_grey(na.value = rgb(0,0,0,alpha=0))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))+
scale_fill_gradientn(colours = terrain.colors(10))
scale_fill_gradientn
?scale_fill_gradientn
##############################
readin.m = melt(readin, id.vars = "X")
#readin.m$value[readin.m$value>5000] = 5000
#readin.m$value[readin.m$value>0&readin.m$value<1] = 10
hist(readin.m$value)
##############################
c(0,15,100,200,1000,5000)/5000
fudgeGray = 1:7/7
fudgeGray[fudgeGray>1] = 1
fudgeGray = gray(fudgeGray)
#readin.m$value=cut(readin.m$value,c(-1,0,15,100,200,1000,5000))
#readin.m$value[readin.m$value=="(-1,0]"] = NA
##############################
#Hclusting stuff
##############################
# readinClust = apply(readin, 2,function(x){as.numeric(cut(x,c(-1,0,15,100,200,1000,5000)))})
# rowClust = dist(readinClust)
# newOrder = rownames(readin)[hclust(rowClust)$order]
##############################
#readin.m$X = factor(readin.m$X, levels = rownames(readin)[newOrder], ordered=T)
#readin.m$X = factor(readin.m$X, levels = factor(readin.m$X, levels = unique(readin.m$X)), ordered=T)
virY = ggplot(readin.m)+
#geom_tile(aes(x=factor(X, levels = rev(sort(readin$X)), ordered=T), y = variable, fill = value))+
geom_tile(aes(x=X, y=variable, fill=value))+
#scale_fill_grey(na.value = rgb(0,0,0,alpha=0))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))+
coord_flip()
if(any(is.na(as.numeric(as.character(readin$X))))){
readin$X = factor(as.character(readin$X))
readin.m$X = factor(as.character(readin.m$X))
}else{
readin$X = factor(readin$X, readin$X[order(as.numeric(gsub(".*_()", "\\1", as.character(readin$X))))])
readin.m$X = factor(readin.m$X, readin.m$X[order(as.numeric(gsub(".*_()", "\\1", as.character(readin.m$X))))])
}
cut(readin.m$value,
c(-0.1,0.01,as.vector(quantile(readin.m$value[readin.m$value>0], seq(0,1, length.out=9)))))
readin.mCuts = cut(readin.m$value,
c(-0.1,0.01,as.vector(quantile(readin.m$value[readin.m$value>0], seq(0,1, length.out=9)))))
readin.mCuts
readin.mCuts = c(-0.1,0.01,as.vector(quantile(readin.m$value[readin.m$value>0], seq(0,1, length.out=9)))))
readin.mCuts
readin.mCuts = c(-0.1,0.01,as.vector(quantile(readin.m$value[readin.m$value>0], seq(0,1, length.out=9))))
readin.mCuts
readin.mCuts/max(readin.m$value)
virX = ggplot(readin.m)+
geom_tile(aes(x=X, y = variable, fill = (value)))+
#scale_fill_grey(na.value = rgb(0,0,0,alpha=0))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))+
scale_fill_gradientn(values = readin.mCuts/max(readin.m$value))
grey(7)
readin.mCuts
length(readin.mCuts)
grey(seq(0, 1, length.out=11))
custGrey = grey(seq(0, 1, length.out=11))
virX = ggplot(readin.m)+
#scale_fill_grey(na.value = rgb(0,0,0,alpha=0))+
geom_tile(aes(x=X, y = variable, fill = (value)))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))+
scale_fill_gradientn(colours = custGrey, values = readin.mCuts/max(readin.m$value))
virX
custGrey = rev(grey(seq(0, 1, length.out=11)))
virX = ggplot(readin.m)+
#scale_fill_grey(na.value = rgb(0,0,0,alpha=0))+
geom_tile(aes(x=X, y = variable, fill = (value)))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))+
scale_fill_gradientn(colours = custGrey, values = readin.mCuts/max(readin.m$value))
virX
readin.mCuts
readin.m = melt(readin, id.vars = "X")
#readin.m$value[readin.m$value>5000] = 5000
#readin.m$value[readin.m$value>0&readin.m$value<1] = 10
hist(readin.m$value)
##############################
c(0,15,100,200,1000,5000)/5000
fudgeGray = 1:7/7
fudgeGray[fudgeGray>1] = 1
fudgeGray = gray(fudgeGray)
#readin.m$value=cut(readin.m$value,c(-1,0,15,100,200,1000,5000))
#readin.m$value[readin.m$value=="(-1,0]"] = NA
##############################
#Hclusting stuff
##############################
# readinClust = apply(readin, 2,function(x){as.numeric(cut(x,c(-1,0,15,100,200,1000,5000)))})
# rowClust = dist(readinClust)
# newOrder = rownames(readin)[hclust(rowClust)$order]
##############################
#readin.m$X = factor(readin.m$X, levels = rownames(readin)[newOrder], ordered=T)
#readin.m$X = factor(readin.m$X, levels = factor(readin.m$X, levels = unique(readin.m$X)), ordered=T)
virY = ggplot(readin.m)+
#geom_tile(aes(x=factor(X, levels = rev(sort(readin$X)), ordered=T), y = variable, fill = value))+
geom_tile(aes(x=X, y=variable, fill=value))+
#scale_fill_grey(na.value = rgb(0,0,0,alpha=0))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))+
coord_flip()
if(any(is.na(as.numeric(as.character(readin$X))))){
readin$X = factor(as.character(readin$X))
readin.m$X = factor(as.character(readin.m$X))
}else{
readin$X = factor(readin$X, readin$X[order(as.numeric(gsub(".*_()", "\\1", as.character(readin$X))))])
readin.m$X = factor(readin.m$X, readin.m$X[order(as.numeric(gsub(".*_()", "\\1", as.character(readin.m$X))))])
}
readin.mCuts = c(-0.1,0.01,as.vector(quantile(readin.m$value[readin.m$value>0], seq(0,1, length.out=9))))
readin.mCuts/max(readin.m$value)
custGrey = rev(grey(seq(0, 1, length.out=11)))
virX = ggplot(readin.m)+
geom_tile(aes(x=X, y = variable, fill = (value)))+
#scale_fill_grey(na.value = rgb(0,0,0,alpha=0))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))+
scale_fill_gradientn(colours = custGrey, values = readin.mCuts/max(readin.m$value))
#scale_fill_gradientn(colours = c(gray((1:7/7))), values = c(0,0.00003,1), limits = c(0,1000))
#rescaler = function(x, ...) x, oob = identity)
#values = c(0,2e-07,0.0002465078,0.001643385,0.003286771,0.01643385,1))
#values = c(0,0.0002465078,0.001643385,0.003286771,0.01643385,0.08216927,1)
#breaks = c(0,2500,5000,15000,20000,40000,50000,60000,70000))
patSums = sapply(split(readin.m, readin.m$X), function(x){sum(x$value>0, na.rm=T)})#!is.na(x$value)}))
virSums = do.call("rbind", (sapply(split(readin.m, readin.m$X), function(x){x$value})))#!is.na(x$value)}))
readinColS = colSums(readin[,-1]>0, na.rm=T)
readinRS = rowSums(readin[,-1]>0, na.rm=T)
patSums.m = data.frame(y=readinRS, x=readin$X)
virSums.m = data.frame(y=readinColS, x=names(readinColS))
virSums.m$x = factor(virSums.m$x, levels = levels(readin.m$variable), ordered=T)
#
# patSums.m$x = factor(patSums.m$x,
#                      patSums.m$x[order(as.numeric(gsub(".*_()", "\\1", as.character(patSums.m$x))))])
patPlot = ggplot(patSums.m)+
geom_bar(aes(x = x, y=y), stat = "identity")
virPlot = ggplot(virSums.m)+
geom_bar(aes(x = x, y=y), stat = "identity")
blank = data.frame(x=1,y=1)
blank = ggplot(blank)+geom_point(aes(x=x,y=y))
blank <- grid.rect(gp=gpar(col="white"))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.6,0,0,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black")),
widths = c(2,8), heights = c(9,1))
?theme
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.6,0,0,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=-90, hjust=0)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.6,0,0,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, hjust=0)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.6,0,0,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.6,0,0,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, hjust=-1)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.6,0,0,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, vjust=-1)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.6,0,0,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, vjust=-0.5)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.6,0,0,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, vjust=0.5)),
widths = c(2,8), heights = c(9,1))
getwd()
source('C:/Users/James/Dropbox/Scholarly Activities/Code/Git/OtherFunandGames/Sam/HeatMap_Buttbetter_CVID.R')
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.5,0,0,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, vjust=0.5)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0,0,0,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, vjust=0.5)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.2,0,0,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, vjust=0.5)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.2,0,-0.1,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, vjust=0.5)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.2,0,-0.2,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, vjust=0.5)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.2,0,-0.3,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, vjust=0.5)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.2,0,-0.4,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, vjust=0.5)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.2,0,-0.35,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.6,0,0),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, vjust=0.5)),
widths = c(2,8), heights = c(9,1))
grid.arrange(virPlot+
coord_flip()+theme(plot.margin=unit(c(0.2,0,-0.35,0),"cm"))+
xlab("Virus")+
ylab("")+
theme(axis.text.y=element_text(colour="black"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()),
virX+theme(axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.title.x=element_blank(),
legend.position="none"),
blank,
patPlot+
xlab("Patient")+
ylab("")+
theme(plot.margin=unit(c(0,0.2,0,-0.2),"cm"),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(colour="black", angle=90, vjust=0.5)),
widths = c(2,8), heights = c(9,1))
setwd("C:/Users/James/Dropbox/Scholarly Activities/Code/Git/AcademicScribbles/Retreat2016/James Lester")
library(slidify)
slidify("index.Rmd"
)
publish("Presentation")
publish("Mancwealm", "Presentation")
?publish
publish(username = "Mancwealm", repo = "Presentation")
publish(username = "Mancwealm", repo = "Presentation")
publish(username = "Mancwealm", repo = "Presentation")
